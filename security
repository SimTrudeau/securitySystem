/*
 Name:		securitySystem.ino
 Created:	9/19/2018 3:38:55 PM
 Author:	Kirby
*/

/*
The purpose of this program is to run an arduino based security system.  
At this point it is just to test concepts.  
An ultrasonic buzzer is hooked up to a breadboard along with a passive buzzer and two LED's which are red and green.
Under normal circumstances, the green light will be on along with the ultrasonic sensor.
Should the sensor determine that an object is within a certain proximity, the light switches from red to green.
If it gets even closer, past a second predetermined point, the red light remains on and the buzzer sounds.
As you back away, the process is reversed, first switching the buzzer off followed by the light going from red to green.

The order which the previous items are connected to the breadboard is arbitrary at this point.
*/

//initialize buzzer
#define buzzer 2

//initialize ultrasonic sensor
#define trigPin 3
#define echoPin 4

//indicator lights
const int greenLED = 5;
const int redLED = 6;

//used to calculate distance
long duration, distance;

void setup() 
{
	Serial.begin(9600);
	pinMode(buzzer, OUTPUT);
	pinMode(trigPin, OUTPUT);
	pinMode(echoPin, INPUT);
	pinMode(greenLED, OUTPUT);
	pinMode(redLED, OUTPUT);
	
	//lights initialized
	digitalWrite(greenLED, HIGH);
	digitalWrite(redLED, LOW);
	
	//buzzer initialized
	digitalWrite(buzzer, LOW);
}


void loop() 
{
	

	//ultrasonic sensor initialized
	digitalWrite(trigPin, LOW);
	delayMicroseconds(2);

	//ultrasonic distancing sequence
	digitalWrite(trigPin, HIGH);
	delayMicroseconds(10);

	digitalWrite(trigPin, LOW);
	duration = pulseIn(echoPin, HIGH); //reads high pulse on pin

	//calculate the distance (in cm) based on the speed of sound
	distance = duration * 0.034 / 2;

	//display reading in serial monitor
	Serial.println(distance);

	delay(50);

	//SIMON LOOK HERE!!! should I do if/else loops or something like this?
	//long range gets green light
	while (distance > 150)
		digitalWrite(greenLED, HIGH);
		digitalWrite(redLED, LOW);
		delay(10);
		break;

	//medium range gets red light
	while (50 <= distance <= 150)
		digitalWrite(greenLED, LOW);
		digitalWrite(redLED, HIGH);
		delay(10);
		break;

	//short range gets red light and buzzer	
	while (distance < 50)
		digitalWrite(greenLED, LOW);
		digitalWrite(redLED, HIGH);
		// generates a 400Hz tone in output pin 2 with 2000ms of duration 
		tone(buzzer, 400, 2000);
		delay(10);
		break;


	




}

